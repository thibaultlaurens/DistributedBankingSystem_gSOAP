/* soapStub.h
   Generated by gSOAP 2.8.11 from bankaccount.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20811
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_account1__initResponse
#define SOAP_TYPE_account1__initResponse (10)
/* account1:initResponse */
struct account1__initResponse
{
public:
	float *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__init
#define SOAP_TYPE_account1__init (11)
/* account1:init */
struct account1__init
{
public:
	float amount;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__addMoneyResponse
#define SOAP_TYPE_account1__addMoneyResponse (13)
/* account1:addMoneyResponse */
struct account1__addMoneyResponse
{
public:
	float *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__addMoney
#define SOAP_TYPE_account1__addMoney (14)
/* account1:addMoney */
struct account1__addMoney
{
public:
	float amount;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__withdrawMoneyResponse
#define SOAP_TYPE_account1__withdrawMoneyResponse (16)
/* account1:withdrawMoneyResponse */
struct account1__withdrawMoneyResponse
{
public:
	float *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__withdrawMoney
#define SOAP_TYPE_account1__withdrawMoney (17)
/* account1:withdrawMoney */
struct account1__withdrawMoney
{
public:
	float amount;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__getAmountResponse
#define SOAP_TYPE_account1__getAmountResponse (19)
/* account1:getAmountResponse */
struct account1__getAmountResponse
{
public:
	float *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_account1__getAmount
#define SOAP_TYPE_account1__getAmount (20)
/* account1:getAmount */
struct account1__getAmount
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (21)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (22)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (24)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (27)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (28)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 account1__init(struct soap*, float amount, float *result);

SOAP_FMAC5 int SOAP_FMAC6 account1__addMoney(struct soap*, float amount, float *result);

SOAP_FMAC5 int SOAP_FMAC6 account1__withdrawMoney(struct soap*, float amount, float *result);

SOAP_FMAC5 int SOAP_FMAC6 account1__getAmount(struct soap*, float *result);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_account1__init(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_account1__addMoney(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_account1__withdrawMoney(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_account1__getAmount(struct soap*);

#endif

/* End of soapStub.h */
